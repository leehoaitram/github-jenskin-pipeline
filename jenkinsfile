pipeline {
    agent any
    triggers {
        // Trigger the pipeline on a push to the repository
        githubPush()
    }
    environment {
        DIRECTORY_PATH = 'dummy path to code'
        STAGING_SERVER = 'AWS EC2 - Staging'
        PRODUCTION_SERVER = 'AWS EC2 - Production'
    }
    stages {
        stage('Delay') {
            // This stage introduces a delay before proceeding with the build
            steps {
                script {
                    // Sleep for 10 seconds or adjust the time as needed
                    sleep time: 10, unit: 'SECONDS'
                }
            }
        }
        stage('Build') {
            steps {
                echo "Building the code using Maven"
                sh 'mvn clean install'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo "Running unit tests with Maven"
                sh 'mvn test'
                echo "Running integration tests"
                sh 'mvn verify'
            }
        }
        stage('Code Analysis') {
            steps {
                echo "Analysing code with SonarQube"
                sh 'mvn sonar:sonar'
            }
        }
        stage('Security Scan') {
            steps {
                echo "Performing security scan with OWASP ZAP"
                sh 'zap-cli start'
                sh 'zap-cli quick-scan --self-contained --spider -r ${DIRECTORY_PATH}'
                sh 'zap-cli stop'
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo "Deploying to staging server: ${env.STAGING_SERVER}"
                sh 'scp -i your-key.pem target/*.war ec2-user@${STAGING_SERVER}:/path/to/deploy'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo "Running integration tests on the staging server"
                // Example command
                sh 'ssh -i your-key.pem ec2-user@${STAGING_SERVER} "cd /path/to/deploy && mvn integration-test"'
            }
        }
        stage('Deploy to Production') {
            steps {
                echo "Deploying to production server: ${env.PRODUCTION_SERVER}"
                sh 'scp -i your-key.pem target/*.war ec2-user@${PRODUCTION_SERVER}:/path/to/deploy'
            }
        }
    }
}
