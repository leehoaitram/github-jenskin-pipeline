pipeline {
    agent any
    triggers {
        // Poll SCM every 2 minutes
        pollSCM('H/2 * * * *')
    }
    tools {
        // Specify Maven tool
        maven 'Maven'
    }
    stages {
        stage('Build') {
            steps {
                // Use Maven to build the project
                sh 'mvn clean package'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                // Run tests using Maven
                sh 'mvn test'
            }
        }
        stage('Code Analysis') {
            steps {
                // Using SonarQube for code analysis
                sh 'mvn sonar:sonar'
            }
        }
        stage('Security Scan') {
            steps {
                // Running OWASP ZAP security scan
                sh './zap.sh'
            }
        }
        stage('Deploy to Staging') {
            steps {
                // Simulating deployment to AWS EC2 staging
                sh 'echo "Deploying to staging environment..."'
                // Additional deployment steps would go here
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                // Run integration tests on the staging server
                sh 'echo "Running integration tests in staging..."'
                // Additional testing steps would go here
            }
        }
        stage('Deploy to Production') {
            steps {
                // Simulating deployment to AWS EC2 production
                sh 'echo "Deploying to production environment..."'
                // Additional deployment steps would go here
            }
        }
    }
    post {
        success {
            echo 'Pipeline completed successfully.'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}
